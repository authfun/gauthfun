definitions:
  model.ApiForm:
    properties:
      group:
        type: string
      method:
        type: string
      name:
        type: string
      route:
        type: string
    type: object
  model.FeatureDetail:
    properties:
      apis:
        items:
          $ref: '#/definitions/schema.Api'
        type: array
      features:
        items:
          $ref: '#/definitions/schema.Feature'
        type: array
      menus:
        items:
          $ref: '#/definitions/schema.Menu'
        type: array
      name:
        type: string
    type: object
  model.FeatureForm:
    properties:
      apiIds:
        items:
          type: string
        type: array
      featureIds:
        items:
          type: string
        type: array
      menuIds:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  model.MenuForm:
    properties:
      name:
        type: string
    type: object
  model.Option:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  model.OrganizationDetail:
    properties:
      id:
        type: string
      name:
        type: string
      parentId:
        type: string
      roles:
        items:
          $ref: '#/definitions/schema.Role'
        type: array
      tenantId:
        type: string
      users:
        items:
          $ref: '#/definitions/schema.User'
        type: array
    type: object
  model.OrganizationNode:
    properties:
      children:
        items:
          $ref: '#/definitions/model.OrganizationNode'
        type: array
      id:
        type: string
      name:
        type: string
      parentId:
        type: string
    type: object
  model.TenantForm:
    properties:
      name:
        type: string
    type: object
  schema.Api:
    properties:
      group:
        type: string
      id:
        type: string
      method:
        type: string
      name:
        type: string
      route:
        type: string
    type: object
  schema.Feature:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  schema.Menu:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  schema.Role:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  schema.Tenant:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  schema.User:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/apis:
    post:
      consumes:
      - application/json
      parameters:
      - description: Api info
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.ApiForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schema.Api'
      summary: Add api
      tags:
      - Api
  /api/apis/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schema.Api'
            type: array
      summary: Get api list
      tags:
      - Api
  /api/apis/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Api Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
      summary: Delete api
      tags:
      - Api
    get:
      consumes:
      - application/json
      parameters:
      - description: Api Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.Api'
      summary: Get api
      tags:
      - Api
    put:
      consumes:
      - application/json
      parameters:
      - description: Api Id
        in: path
        name: id
        required: true
        type: string
      - description: Api info
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.ApiForm'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Update api
      tags:
      - Api
  /api/features:
    post:
      consumes:
      - application/json
      parameters:
      - description: Feature info
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.FeatureForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schema.Feature'
      summary: Add feature
      tags:
      - Feature
  /api/features/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schema.Feature'
            type: array
      summary: Get feature list
      tags:
      - Feature
  /api/features/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Feature ID
        in: path
        name: id
        required: true
        type: string
      - description: Whether to get the implicit info
        in: query
        name: implicit
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.FeatureDetail'
      summary: Get feature by id
      tags:
      - Feature
  /api/features/options:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Option'
            type: array
      summary: Get feature option
      tags:
      - Feature
  /api/menus:
    post:
      consumes:
      - application/json
      parameters:
      - description: Menu info
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.MenuForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schema.Menu'
      summary: Add menu
      tags:
      - Menu
  /api/menus/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schema.Menu'
            type: array
      summary: Get menu list
      tags:
      - Menu
  /api/menus/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Menu Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
      summary: Delete menu
      tags:
      - Menu
    get:
      consumes:
      - application/json
      parameters:
      - description: Menu Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.Menu'
      summary: Get menu
      tags:
      - Menu
    put:
      consumes:
      - application/json
      parameters:
      - description: Menu Id
        in: path
        name: id
        required: true
        type: string
      - description: Menu info
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.MenuForm'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Update menu
      tags:
      - Menu
  /api/menus/options:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Option'
            type: array
      summary: Get menu option
      tags:
      - Menu
  /api/organizations/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OrganizationDetail'
      summary: Get organization
      tags:
      - Organization
  /api/organizations/tree:
    get:
      consumes:
      - application/json
      parameters:
      - description: Tenant ID
        in: query
        name: tenantId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.OrganizationNode'
            type: array
      summary: Get organization tree
      tags:
      - Organization
  /api/tenants:
    post:
      consumes:
      - application/json
      parameters:
      - description: Tenant info
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.TenantForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schema.Tenant'
      summary: Add tenant
      tags:
      - Tenant
  /api/tenants/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schema.Tenant'
            type: array
      summary: Get tenant list
      tags:
      - Tenant
  /api/tenants/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Tenant Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
      summary: Delete tenant
      tags:
      - Tenant
    get:
      consumes:
      - application/json
      parameters:
      - description: Tenant Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.Tenant'
      summary: Get tenant
      tags:
      - Tenant
    put:
      consumes:
      - application/json
      parameters:
      - description: Tenant Id
        in: path
        name: id
        required: true
        type: string
      - description: Tenant info
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.TenantForm'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Update tenant
      tags:
      - Tenant
  /api/tenants/options:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Option'
            type: array
      summary: Get tenant option
      tags:
      - Tenant
swagger: "2.0"
